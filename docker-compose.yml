# version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}"]
    #   interval: 5s
    #   timeout: 3s
    #   retries: 12
    networks:
      - backend

  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      - backend

  django:
    build: .
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    restart: unless-stopped
    
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      # استفاده از متغیرهای .env
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - backend


  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@db:5432/django_db
    depends_on:
      - db
      - redis
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
